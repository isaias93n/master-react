{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ijnll\\\\Documents\\\\Proyectos\\\\master-react\\\\06-proyecto1\\\\src\\\\components\\\\Listado.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Editar } from './Editar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Listado = ({\n  listadoState,\n  setListadoState\n}) => {\n  _s();\n  // const [listadoState, setListadoState] = useState([]);\n\n  const [editar, setEditar] = useState(0);\n  useEffect(() => {\n    conseguirPeliculas();\n  }, []);\n  const conseguirPeliculas = e => {\n    let peliculas = JSON.parse(localStorage.getItem(\"pelis\"));\n    //console.log(peliculas);\n    setListadoState(peliculas);\n    return peliculas;\n  };\n  const borrarPeli = id => {\n    let pelis_almacenadas = conseguirPeliculas();\n    let nuevo_arrary_peliculas = pelis_almacenadas.filter(peli => peli.id !== parseInt(id));\n    setListadoState(nuevo_arrary_peliculas);\n    localStorage.setItem('pelis', JSON.stringify(nuevo_arrary_peliculas));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listadoState != null ? listadoState.map(peli => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"peli-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: peli.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: peli.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          onClick: () => {\n            setEditar(peli.id);\n          },\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => {\n            borrarPeli(peli.id);\n          },\n          children: \"Borrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), editar === peli.id && /*#__PURE__*/_jsxDEV(Editar, {\n          peli: peli,\n          conseguirPeliculas: conseguirPeliculas,\n          setEditar: setEditar,\n          setListadoState: setListadoState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)]\n      }, peli.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No hay peliculas para mostrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n};\n_s(Listado, \"vWKC4yEjpDp2dek73vgOgVzbE6o=\");\n_c = Listado;\nvar _c;\n$RefreshReg$(_c, \"Listado\");","map":{"version":3,"names":["React","useEffect","useState","Editar","jsxDEV","_jsxDEV","Fragment","_Fragment","Listado","listadoState","setListadoState","_s","editar","setEditar","conseguirPeliculas","e","peliculas","JSON","parse","localStorage","getItem","borrarPeli","id","pelis_almacenadas","nuevo_arrary_peliculas","filter","peli","parseInt","setItem","stringify","children","map","className","titulo","fileName","_jsxFileName","lineNumber","columnNumber","descripcion","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ijnll/Documents/Proyectos/master-react/06-proyecto1/src/components/Listado.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Editar } from './Editar';\r\n\r\nexport const Listado = ({listadoState, setListadoState}) => {\r\n\r\n    // const [listadoState, setListadoState] = useState([]);\r\n\r\n    const [editar, setEditar] = useState(0);\r\n\r\n    useEffect(() => {\r\n        conseguirPeliculas();\r\n    }, []);\r\n\r\n    const conseguirPeliculas = e => {\r\n        let peliculas = JSON.parse(localStorage.getItem(\"pelis\"));\r\n        //console.log(peliculas);\r\n        setListadoState(peliculas);\r\n\r\n        return peliculas;\r\n    }\r\n\r\n    const borrarPeli = (id) => {\r\n\r\n        let pelis_almacenadas = conseguirPeliculas();\r\n\r\n        let nuevo_arrary_peliculas = pelis_almacenadas.filter(peli => peli.id !== parseInt(id));\r\n\r\n        setListadoState(nuevo_arrary_peliculas);\r\n\r\n        localStorage.setItem('pelis', JSON.stringify(nuevo_arrary_peliculas));\r\n\r\n    } \r\n\r\n    return (\r\n\r\n        <>\r\n            { listadoState != null ?\r\n            \r\n                listadoState.map(peli => {\r\n\r\n                return (\r\n\r\n                    <article key={peli.id} className=\"peli-item\">\r\n                        <h3 className=\"title\">{peli.titulo}</h3>\r\n                        <p className=\"description\">{peli.descripcion}</p>\r\n\r\n                        <button className=\"edit\" onClick={() =>{setEditar(peli.id)}}>Editar</button>\r\n                        <button className=\"delete\" onClick={() => { borrarPeli(peli.id) }}>Borrar</button>\r\n\r\n                        {editar === peli.id && (\r\n                            <Editar peli={peli} conseguirPeliculas={conseguirPeliculas} setEditar={setEditar} setListadoState={setListadoState} />\r\n                        )}\r\n                    </article>\r\n                    \r\n\r\n                );\r\n            }) : <h2>No hay peliculas para mostrar</h2>\r\n        \r\n        }\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}